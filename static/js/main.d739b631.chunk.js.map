{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","setSelectedUserId","setSelectedTodoId","handleReset","className","map","id","title","userId","completed","classNames","type","onClick","handleSelect","TodoFilter","filterBy","setFilterBy","query","setQuery","value","onChange","event","target","placeholder","style","pointerEvents","length","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedUserId","useState","user","setUser","useEffect","userFromServer","findTodo","filter","Fragment","href","email","name","App","setTodos","isLoading","setLoading","todosFromServer","filteredTodos","todo","toLowerCase","includes","prevQuery","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d739b631.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setSelectedUserId: (value: number) => void,\n  selectedTodoId: number,\n  setSelectedTodoId: (value: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  setSelectedUserId,\n  setSelectedTodoId,\n}) => {\n  const handleSelect = (id: number, userId: number) => {\n    setSelectedTodoId(id);\n    setSelectedUserId(userId);\n  };\n\n  const handleReset = () => {\n    setSelectedTodoId(0);\n    setSelectedUserId(0);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(({\n          id, title, userId, completed,\n        }) => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={id}\n          >\n            <td className=\"is-vcentered\">\n              {id}\n            </td>\n\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className={classNames(\n              'is-vcentered',\n              {\n                'is-expanded': completed === false,\n              },\n            )}\n            >\n              <p className={classNames('has-text-success',\n                {\n                  'has-text-danger': completed === false,\n                })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={selectedTodoId === id\n                  ? handleReset\n                  : () => handleSelect(id, userId)}\n              >\n                {selectedTodoId === id\n                  ? (\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye-slash\" />\n                    </span>\n                  )\n                  : (\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n\n                  )}\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  filterBy: string,\n  setFilterBy: (value: string) => void,\n  query: string,\n  setQuery: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterBy,\n  setFilterBy,\n  query,\n  setQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterBy}\n            onChange={(event) => {\n              setFilterBy(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            setQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query.length > 0\n            && (\n              // eslint-disable-next-line jsx-a11y/control-has-associated-label\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => setQuery('')}\n              />\n            )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => {\n  return (\n    <div className=\"Loader\" data-cy=\"loader\">\n      <div className=\"Loader__content\" />\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodoId: number,\n  selectedUserId: number,\n  setSelectedTodoId: (id: number) => void,\n  setSelectedUserId: (id: number) => void,\n  todos: Todo[],\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodoId,\n  selectedUserId,\n  setSelectedTodoId,\n  setSelectedUserId,\n  todos,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(selectedUserId)\n      .then(userFromServer => {\n        setUser(userFromServer);\n      });\n  }, []);\n\n  const findTodo = todos.filter(({ id }) => selectedTodoId === id);\n\n  const handleReset = () => {\n    setSelectedTodoId(0);\n    setSelectedUserId(0);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          {findTodo.map(({ id, title, completed }) => (\n            <React.Fragment key={id}>\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  {`Todo #${id}`}\n                </div>\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={handleReset}\n                />\n              </header>\n\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {title}\n                </p>\n\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {completed\n                    ? (<strong className=\"has-text-success\">Done</strong>)\n                    : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n                  {' by '}\n\n                  <a href={`mailto:${user.email}`}>\n                    {user.name}\n                  </a>\n                </p>\n              </div>\n            </React.Fragment>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [filterBy, setFilterBy] = useState('all');\n  const [query, setQuery] = useState('');\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setLoading(false);\n        setTodos(todosFromServer);\n      });\n  }, []);\n\n  const selectrdTodos = todos.filter((todo) => {\n    switch (filterBy) {\n      case 'active':\n        return todo.completed === false;\n      case 'completed':\n        return todo.completed === true;\n      default:\n        return todo;\n    }\n  });\n\n  const filteredTodos = selectrdTodos.filter(({ title }) => (\n    title.toLowerCase().includes(query.toLowerCase())\n  ));\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterBy={filterBy}\n                setFilterBy={setFilterBy}\n                query={query}\n                setQuery={(prevQuery) => {\n                  setQuery(prevQuery);\n                }}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedTodoId={selectedTodoId}\n                    setSelectedTodoId={setSelectedTodoId}\n                    setSelectedUserId={setSelectedUserId}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodoId\n        && (\n          <TodoModal\n            selectedTodoId={selectedTodoId}\n            setSelectedTodoId={setSelectedTodoId}\n            selectedUserId={selectedUserId}\n            setSelectedUserId={setSelectedUserId}\n            todos={todos}\n          />\n        )}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}